// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: command.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from command.proto</summary>
public static partial class CommandReflection {

  #region Descriptor
  /// <summary>File descriptor for command.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static CommandReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cg1jb21tYW5kLnByb3RvIhQKA1JvdxINCgVmaWVsZBgBIAMoCSIdCgdDb250",
          "ZW50EhIKBHJvd3MYASADKAsyBC5Sb3ciHQoKUmF3Q29udGVudBIPCgdyYXdE",
          "YXRhGAEgASgMKk8KB0NvbW1hbmQSDgoKUmVxQ29udGVudBAAEg4KClJlc0Nv",
          "bnRlbnQQARIRCg1SZXFSYXdDb250ZW50EAISEQoNUmVzUmF3Q29udGVudBAD",
          "YgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Command), }, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Row), global::Row.Parser, new[]{ "Field" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Content), global::Content.Parser, new[]{ "Rows" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RawContent), global::RawContent.Parser, new[]{ "RawData" }, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum Command {
  [pbr::OriginalName("ReqContent")] ReqContent = 0,
  [pbr::OriginalName("ResContent")] ResContent = 1,
  [pbr::OriginalName("ReqRawContent")] ReqRawContent = 2,
  [pbr::OriginalName("ResRawContent")] ResRawContent = 3,
}

#endregion

#region Messages
public sealed partial class Row : pb::IMessage<Row> {
  private static readonly pb::MessageParser<Row> _parser = new pb::MessageParser<Row>(() => new Row());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Row> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CommandReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Row() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Row(Row other) : this() {
    field_ = other.field_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Row Clone() {
    return new Row(this);
  }

  /// <summary>Field number for the "field" field.</summary>
  public const int FieldFieldNumber = 1;
  private static readonly pb::FieldCodec<string> _repeated_field_codec
      = pb::FieldCodec.ForString(10);
  private readonly pbc::RepeatedField<string> field_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> Field {
    get { return field_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Row);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Row other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!field_.Equals(other.field_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= field_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    field_.WriteTo(output, _repeated_field_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += field_.CalculateSize(_repeated_field_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Row other) {
    if (other == null) {
      return;
    }
    field_.Add(other.field_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          field_.AddEntriesFrom(input, _repeated_field_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class Content : pb::IMessage<Content> {
  private static readonly pb::MessageParser<Content> _parser = new pb::MessageParser<Content>(() => new Content());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Content> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CommandReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Content() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Content(Content other) : this() {
    rows_ = other.rows_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Content Clone() {
    return new Content(this);
  }

  /// <summary>Field number for the "rows" field.</summary>
  public const int RowsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::Row> _repeated_rows_codec
      = pb::FieldCodec.ForMessage(10, global::Row.Parser);
  private readonly pbc::RepeatedField<global::Row> rows_ = new pbc::RepeatedField<global::Row>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Row> Rows {
    get { return rows_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Content);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Content other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!rows_.Equals(other.rows_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= rows_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    rows_.WriteTo(output, _repeated_rows_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += rows_.CalculateSize(_repeated_rows_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Content other) {
    if (other == null) {
      return;
    }
    rows_.Add(other.rows_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          rows_.AddEntriesFrom(input, _repeated_rows_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class RawContent : pb::IMessage<RawContent> {
  private static readonly pb::MessageParser<RawContent> _parser = new pb::MessageParser<RawContent>(() => new RawContent());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RawContent> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CommandReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RawContent() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RawContent(RawContent other) : this() {
    rawData_ = other.rawData_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RawContent Clone() {
    return new RawContent(this);
  }

  /// <summary>Field number for the "rawData" field.</summary>
  public const int RawDataFieldNumber = 1;
  private pb::ByteString rawData_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString RawData {
    get { return rawData_; }
    set {
      rawData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RawContent);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RawContent other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RawData != other.RawData) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RawData.Length != 0) hash ^= RawData.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RawData.Length != 0) {
      output.WriteRawTag(10);
      output.WriteBytes(RawData);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RawData.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(RawData);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RawContent other) {
    if (other == null) {
      return;
    }
    if (other.RawData.Length != 0) {
      RawData = other.RawData;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          RawData = input.ReadBytes();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
